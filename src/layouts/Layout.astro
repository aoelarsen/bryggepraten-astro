---
export interface Props {
    title: string;
}

const { title } = Astro.props;
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<!DOCTYPE html>
<html lang='en'>
    <head>
        <meta charset='UTF-8' />
        <meta name='viewport' content='width=device-width' />
        <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
        <meta name='generator' content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body
        class='min-h-screen bg-gray-200 dark:bg-gray-900 bg-gradient-to-bl from-amber-200 via-sky-300 to-blue-900 leading-relaxed'
    >
        <div
            class='container min-h-screen front-wrap mx-auto text-slate-900 dark:text-cyan-50 bg-slate-50 dark:bg-gray-800 shadow-blue-100 dark:shadow-blue-600 shadow-md'
        >
            <Header />
            <slot />
            <Footer />
        </div>
    </body>
</html>
<style is:global>
    :root {
        --accent: 124, 58, 237;
        --accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
    }
    html {
        font-family: system-ui, sans-serif;
        background-color: #f6f6f6;
    }
    code {
        font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
            Bitstream Vera Sans Mono, Courier New, monospace;
    }
    h2 {
        font-size: 1.5rem;
        padding-top: 1rem;
        padding-bottom: 1.5rem;
    }
    p {
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
    }
    .front-wrap {
        display: grid;
        grid-template-rows: auto 1fr auto;
    }
    .fadeOut {
        opacity: 0;
        filter: blur(4px);
    }
    .fadeIn {
        opacity: 1;
        filter: blur(0);
    }

    @media (prefers-reduced-motion) {
        .fadeOut {
            transition: none;
        }
    }
</style>

<script is:inline>
    const options = {
        root: document,
        rootMargin: '0px',
        threshold: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1],
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            console.log(entry);
            if (entry.isIntersecting) {
                entry.target.classList.add('fadeIn');
            } else {
                entry.target.classList.remove('fadeIn');
            }
        });
    }, options);

    const hiddenElements = document.querySelectorAll('.fadeOut');
    hiddenElements.forEach((el) => observer.observe(el));
</script>
